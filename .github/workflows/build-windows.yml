name: Build Windows Executable

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

jobs:
  build-windows:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Build executable
      run: |
        pyinstaller --clean --noconfirm --onefile --windowed --name MCP_Client_X app_gui.py --hidden-import=uvicorn --hidden-import=click --hidden-import=starlette --hidden-import=fastapi --hidden-import=httpx --hidden-import=ollama --hidden-import=mcp --add-data "src;src"
        
    - name: Test executable
      run: |
        if (Test-Path "dist\MCP_Client_X.exe") {
          Write-Host "‚úÖ Executable built successfully"
          $size = (Get-Item "dist\MCP_Client_X.exe").Length / 1MB
          Write-Host "üì¶ Size: $([math]::Round($size, 2)) MB"
        } else {
          Write-Host "‚ùå Executable not found"
          exit 1
        }
        
    - name: Upload executable artifact
      uses: actions/upload-artifact@v3
      with:
        name: MCP_Client_X_Windows
        path: dist/MCP_Client_X.exe
        
    - name: Create installer (if Inno Setup available)
      shell: pwsh
      run: |
        # Check if Inno Setup is available
        $innoSetup = Get-Command "iscc.exe" -ErrorAction SilentlyContinue
        if ($innoSetup) {
          Write-Host "üì¶ Creating installer with Inno Setup..."
          iscc installer.iss
          if (Test-Path "dist_installer\MCP_Client_X_Setup.exe") {
            Write-Host "‚úÖ Installer created successfully"
          }
        } else {
          Write-Host "‚ö†Ô∏è Inno Setup not found, skipping installer creation"
        }
        
    - name: Upload installer artifact
      uses: actions/upload-artifact@v3
      if: success()
      with:
        name: MCP_Client_X_Installer
        path: dist_installer/MCP_Client_X_Setup.exe
        
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/v')
      uses: softprops/action-gh-release@v1
      with:
        files: |
          dist/MCP_Client_X.exe
          dist_installer/MCP_Client_X_Setup.exe
        body: |
          ## MCP Client X Release
          
          ### üöÄ Quick Start
          1. Download `MCP_Client_X_Setup.exe` for full installation
          2. Or download `MCP_Client_X.exe` for portable version
          3. Make sure Ollama is installed and running
          4. Run `ollama pull qwen3:8b` to get the AI model
          
          ### üìã Requirements
          - Windows 10/11 (64-bit)
          - Ollama installed and running
          - qwen3:8b model downloaded
          
          ### üîó Links
          - [Windows README](README_WINDOWS.md)
          - [Ollama Download](https://ollama.ai/download/windows)
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 